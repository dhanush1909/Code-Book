{"version":3,"sources":["components/sidebar/sidebar.module.css","components/header/header.module.css","UI/solutions/index.module.css","UI/logo/logo.module.css","assets/logo.png","containers/home/home.module.css","UI/backdrop/backdrop.module.css","assets/problems/running_sum_1d_array.png","HOC/codeBlock/codeBlock.module.css","assets/problems/no-of-good-pairs.png","assets/problems/maximum-subarray.png","UI/logo/logo.js","components/header/header.js","components/sidebar/sidebar.js","UI/backdrop/backdrop.js","components/sideBarMobile/sideBarMobile.js","HOC/codeBlock/codeBlock.js","UI/solutions/runningSumOf1DArray.js","UI/solutions/noOfGoodPairs.js","UI/solutions/maximumSubarray.js","UI/solutions/singleNumber.js","UI/solutions/findTheDuplicateNumber.js","UI/solutions/middleOfLinkedList.js","UI/solutions/twoSum.js","UI/solutions/fibonacciNumber.js","containers/home/Home.js","App.js","serviceWorker.js","index.js","assets/problems/single-number.png","assets/problems/find-the-duplicate-number.png","assets/problems/two-sum.png","assets/problems/fibonacci-number.png","assets/solutions/fibonacciNumber/fib-tree.png","assets/solutions/fibonacciNumber/fib-tree-dp.png","../node_modules/regenerate-unicode-properties sync /^/.//.*/.js$","components/sideBarMobile/sideBarMobile.module.css"],"names":["module","exports","logo","className","classes","Logo","alt","src","logoImg","LogoImg","header","props","isMenuActive","showSideBar","Active","menuClasses","Hamburger","Header","join","onClick","toggleMenu","sidebar","Sidebar","NavLink","to","backdrop","Backdrop","hideSideBar","sideBarMobile","style","transform","showMobileSideBar","codeBlock","disabled","language","code","children","CodeBlock","solution1","trim","runningSumOf1DArray","Content","Question","ProblemImage","problemImage","Solution","Answer","solution2","solution3","noOfGoodPairs","SolutionBlock","maximumSubarray","solution4","singleNumber","findTheDuplicateNumber","middleOfLinkedList","QuestionDesc","twoSum","fibonacciNumber","SolutionImage","fibTreeImage","fibTreeDpImage","Home","this","path","exact","Component","App","useState","setShowSideBar","toggleSideBarHandler","console","log","basename","sideBarShown","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve"],"mappings":"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","file":"static/js/main.bd5af9b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"sidebar_Sidebar__1Qz_V\",\"NavLink\":\"sidebar_NavLink__2vEOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"header_Header__2o08c\",\"Hamburger\":\"header_Hamburger__16rUP\",\"Active\":\"header_Active__3SgKT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"solutions_Content__nkAw_\",\"Question\":\"solutions_Question__11_8v\",\"Answer\":\"solutions_Answer__1E7KC\",\"QuestionDesc\":\"solutions_QuestionDesc__3wEM0\",\"Solution\":\"solutions_Solution__72aF9\",\"SolutionBlock\":\"solutions_SolutionBlock__ZbiMO\",\"ProblemImage\":\"solutions_ProblemImage__M62Tk\",\"SolutionImage\":\"solutions_SolutionImage__6p82a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"logo_Logo__1mXpo\",\"LogoImg\":\"logo_LogoImg__1-gSb\"};","module.exports = __webpack_public_path__ + \"static/media/logo.0424a39d.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Home\":\"home_Home__ruLji\",\"Card\":\"home_Card__1r4pG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"backdrop_Backdrop__9Ia71\"};","module.exports = __webpack_public_path__ + \"static/media/running_sum_1d_array.eef876c5.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CodeBlock\":\"codeBlock_CodeBlock__2zb1J\"};","module.exports = __webpack_public_path__ + \"static/media/no-of-good-pairs.aeec7340.png\";","module.exports = __webpack_public_path__ + \"static/media/maximum-subarray.9c1e348d.png\";","import React from \"react\";\nimport classes from \"./logo.module.css\";\nimport logoImg from \"../../assets/logo.png\";\n\nexport default function logo() {\n  return (\n    <div className={classes.Logo}>\n      <img alt=\"Code Book\" src={logoImg} className={classes.LogoImg} />\n      Code Book\n    </div>\n  );\n}\n","import React from \"react\";\nimport classes from \"./header.module.css\";\nimport Logo from \"../../UI/logo/logo\";\n\nexport default function header(props) {\n  const isMenuActive = props.showSideBar ? classes.Active : \"\";\n  const menuClasses = [classes.Hamburger, isMenuActive];\n  return (\n    <div className={classes.Header}>\n      <img\n        className={menuClasses.join(\" \")}\n        src=\"https://img.icons8.com/ios-glyphs/120/000000/menu.png\"\n        alt=\"menu\"\n        onClick={props.toggleMenu}\n      />\n      <Logo />\n    </div>\n  );\n}\n","import React from \"react\";\nimport classes from \"./sidebar.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function sidebar() {\n  return (\n    <div className={classes.Sidebar}>\n      <ul>\n        <NavLink\n          className={classes.NavLink + \" navlink\"}\n          to=\"/problems/Running-sum-of-1d-array\"\n        >\n          <li>Running Sum of 1d Array</li>\n        </NavLink>\n        <NavLink\n          className={classes.NavLink + \" navlink\"}\n          to=\"/problems/Number-of-Good-Pairs\"\n        >\n          <li>Number of Good Pairs</li>\n        </NavLink>\n        <NavLink\n          className={classes.NavLink + \" navlink\"}\n          to=\"/problems/Two-sum\"\n        >\n          <li>Two sum</li>\n        </NavLink>\n        <NavLink\n          className={classes.NavLink + \" navlink\"}\n          to=\"/problems/Maximum-subarray\"\n        >\n          <li>Maximum subarray</li>\n        </NavLink>\n        <NavLink\n          className={classes.NavLink + \" navlink\"}\n          to=\"/problems/Single-number\"\n        >\n          <li>Single number</li>\n        </NavLink>\n        <NavLink\n          className={classes.NavLink + \" navlink\"}\n          to=\"/problems/Find-the-duplicate-number\"\n        >\n          <li>Find the duplicate number</li>\n        </NavLink>\n        <NavLink\n          className={classes.NavLink + \" navlink\"}\n          to=\"/problems/Find-middle-of-linked-list\"\n        >\n          <li>Find middle of linked list</li>\n        </NavLink>\n        <NavLink\n          className={classes.NavLink + \" navlink\"}\n          to=\"/problems/Fibonacci-number\"\n        >\n          <li>Fibonacci number</li>\n        </NavLink>\n        <li>Problem 4</li>\n        <li>Problem 5</li>\n        <li>Problem 6</li>\n        <li>Problem 7</li>\n        <li>Problem 8</li>\n        <li>Problem 9</li>\n        <li>Problem 10</li>\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classes from \"./backdrop.module.css\";\n\nexport default function backdrop(props) {\n  return <div className={classes.Backdrop} onClick={props.hideSideBar}></div>;\n}\n","import React from \"react\";\nimport classes from \"./sideBarMobile.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport Backdrop from \"../../UI/backdrop/backdrop\";\n\nfunction sideBarMobile(props) {\n  const pos = props.showMobileSideBar ? \"0%\" : \"-100%\";\n  const style = { transform: \"translate(\" + pos + \")\" };\n  return (\n    <>\n      {props.showMobileSideBar ? (\n        <div className={classes.Backdrop}>\n          <Backdrop hideSideBar={props.hideSideBar} />\n        </div>\n      ) : null}\n\n      <div className={classes.Sidebar} style={style}>\n        <ul>\n          <NavLink\n            className={classes.NavLink + \" navlink\"}\n            to=\"/problems/Running-sum-of-1d-array\"\n          >\n            <li>Running Sum of 1d Array</li>\n          </NavLink>\n          <NavLink\n            className={classes.NavLink + \" navlink\"}\n            to=\"/problems/Number-of-Good-Pairs\"\n          >\n            <li>Number of Good Pairs</li>\n          </NavLink>\n          <NavLink\n            className={classes.NavLink + \" navlink\"}\n            to=\"/problems/Two-sum\"\n          >\n            <li>Two sum</li>\n          </NavLink>\n          <NavLink\n            className={classes.NavLink + \" navlink\"}\n            to=\"/problems/Maximum-subarray\"\n          >\n            <li>Maximum subarray</li>\n          </NavLink>\n          <NavLink\n            className={classes.NavLink + \" navlink\"}\n            to=\"/problems/Single-number\"\n          >\n            <li>Single number</li>\n          </NavLink>\n          <NavLink\n            className={classes.NavLink + \" navlink\"}\n            to=\"/problems/Find-the-duplicate-number\"\n          >\n            <li>Find the duplicate number</li>\n          </NavLink>\n          <NavLink\n            className={classes.NavLink + \" navlink\"}\n            to=\"/problems/Find-middle-of-linked-list\"\n          >\n            <li>Find middle of linked list</li>\n          </NavLink>\n          <NavLink\n            className={classes.NavLink + \" navlink\"}\n            to=\"/problems/Fibonacci-number\"\n          >\n            <li>Fibonacci number</li>\n          </NavLink>\n          <li>Problem 4</li>\n          <li>Problem 5</li>\n          <li>Problem 6</li>\n          <li>Problem 7</li>\n          <li>Problem 8</li>\n          <li>Problem 9</li>\n          <li>Problem 10</li>\n        </ul>\n      </div>\n    </>\n  );\n}\n\nexport default sideBarMobile;\n","import React from \"react\";\nimport classes from \"./codeBlock.module.css\";\nimport {\n  LiveProvider,\n  LiveEditor\n} from 'react-live'\n\nexport default function codeBlock(props) {\n  return (\n    <LiveProvider disabled language=\"java\" code={props.children}>\n      <LiveEditor className={classes.CodeBlock} />\n    </LiveProvider>);\n}\n","import React from \"react\";\nimport classes from \"./index.module.css\";\nimport problemImage from \"../../assets/problems/running_sum_1d_array.png\";\nimport CodeBlock from \"../../HOC/codeBlock/codeBlock\";\n\nconst solution1 = `\npublic int[] countSum(int[] Arr) {\n  int n = Arr.length;\n  for(int i=1;i<n;i++){\n    Arr[i]=Arr[i]+Arr[i-1];\n  }\n  return Arr;\n}\n`\n  .trim();\nexport default function runningSumOf1DArray() {\n  return (\n    <div className={classes.Content}>\n      <div className={classes.Question}>\n        Caluculate running sum of the array\n      </div>\n      <img\n        alt=\"Running sum of 1d array\"\n        className={classes.ProblemImage}\n        src={problemImage}\n      ></img>\n      <div className={classes.Solution}>Solution 1:</div>\n      <div className={classes.Answer}>\n        We will use the input array and modify it, and return it as the\n        solution. That way, we don’t have to create a new array. For every index\n        of the array we need to add it with the previous index. Arr[i] = Arr[i]\n        + Arr[i-1].\n      </div>\n      <div>\n        <CodeBlock>\n          {solution1}\n        </CodeBlock>\n      </div>\n      <div className={classes.Answer}>\n        <b>Time Complexity: O(n) </b>Since we iterate over each element of array\n        once the time complexity will be O(n).\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classes from \"./index.module.css\";\nimport problemImage from \"../../assets/problems/no-of-good-pairs.png\";\nimport CodeBlock from \"../../HOC/codeBlock/codeBlock\";\n\nconst solution1 = `\npublic int numIdenticalPairs(int[] Arr) {\n  int n = Arr.length;\n  int count = 0;\n\n  for(int i=1;i<n-1;i++){\n    for(int j=i+1;j<n;j++){\n      if(Arr[i] == Arr[j]) count++; //increase count if both the elements are same.// \n    }\n  }\n  return count;\n}\n`.trim();\n\nconst solution2 = `\npublic int numIdenticalPairs(int[] Arr) {\n  int n = Arr.length;\n  int finalCount = 0;\n  int tempCount = 1;\n  Arrays.sort(Arr);\n\n  for(int i=0;i<n-1;i++){\n    if(Arr[i] == Arr[i+1]){\n        tempCount++;\n    } else {\n        finalCount += (tempCount * (tempCount - 1)) / 2;\n        tempCount = 1;\n    }\n  }\n\n  /* if tempCount is > 1 then we need to \n  add the no of pairs to the finalCount */\n  finalCount += (tempCount * (tempCount - 1)) / 2;\n  return finalCount;\n}\n`.trim();\n\nconst solution3 = `\npublic int countSum(int[] Arr) {\n  int finalCount = 0;\n  int[] frequency = new int[101];\n\n  for(int i=0;i<Arr.length;i++){\n\n      // add the count of the number at index i to the final count //\n      finalCount += frequency[Arr[i]];\n\n      // increment the number in the frequency array //\n      frequency[Arr[i]]++;\n  }\n\n  return finalCount;\n}\n`.trim();\n\nexport default function noOfGoodPairs() {\n  return (\n    <div className={classes.Content}>\n      <div className={classes.Question}>Number of Good Pairs</div>\n      <img\n        alt=\"Number of Good Pairs\"\n        className={classes.ProblemImage}\n        src={problemImage}\n      ></img>\n      <div className={classes.SolutionBlock}>\n        <div className={classes.Solution}>Solution 1:</div>\n        <div className={classes.Answer}>\n          Brute force approach. For every index loop through the array to find a\n          match. Increment the count if 2 index have same value.\n        </div>\n        <div>\n          <CodeBlock>\n            {solution1}\n          </CodeBlock>\n        </div>\n        <div className={classes.Answer}>\n          <b>\n            Time Complexity: O(n<sup>2</sup>){\" \"}\n          </b>\n          Since we use 2 for loops time complexity will be O(n<sup>2</sup>).\n        </div>\n      </div>\n      <div className={classes.SolutionBlock}>\n        <div className={classes.Solution}>Solution 2:</div>\n        <div className={classes.Answer}>\n          In this approach we will first sort the array. Then we will compare\n          each index with the next index. Arr[i] == Arr[i+1]. If both are same\n          then we will increae the tempCount by 1. If both are different then we\n          will the number of pairs that can be formed using the temp count and\n          add it to the finalCount.{\" \"}\n          <code>(tempCount * (tempCount - 1)) / 2</code>. Then we will set\n          tempCount to 1.\n        </div>\n        <div>\n          <CodeBlock>\n            {solution2}\n          </CodeBlock>\n        </div>\n        <div className={classes.Answer}>\n          <b>Time Complexity: O(nlogn) </b>Best sorting algorith has time\n          complexity of O(nlogn). After sorting we iterate over the array once\n          so O(n). Hence the final complexity will be O(nlogn).\n        </div>\n      </div>\n      <div className={classes.SolutionBlock}>\n        <div className={classes.Solution}>Solution 3:</div>\n        <div className={classes.Answer}>\n          For this solution we need to create an frequency array that counts the\n          number of occurence of a number. At every iteration we add the count\n          of the number in that index to the final count.\n          <code> finalCount += frequency[Arr[i]];</code>\n        </div>\n        <div>\n          <CodeBlock>\n            {solution3}\n          </CodeBlock>\n        </div>\n        <div className={classes.Answer}>\n          <b>Time Complexity: O(n) </b>Since we iterate over each element of\n          array once the time complexity will be O(n).\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classes from \"./index.module.css\";\nimport problemImage from \"../../assets/problems/maximum-subarray.png\";\nimport CodeBlock from \"../../HOC/codeBlock/codeBlock\";\n\nconst solution1 = `\npublic int maximumSubarray(int[] Arr) {\n  int n = Arr.length;\n  int max = Integer.MIN_VALUE;\n\n  for(int i=1;i<n-1;i++){\n    int sum = 0;\n    for(int j=i;j<n;j++){ //start the loop from ith index\n      sum += Arr[j]; \n    }    \n    max = Math.max(max,sum);\n  }\n  return max;\n}\n`.trim();\n\nconst solution2 = `\npublic int numIdenticalPairs(int[] Arr) {\n  int n = Arr.length;\n  int max = Integer.MIN_VALUE;\n  int sum = 0;\n\n  for(int i=0;i<n;i++){\n    sum = sum + a[i]; //add the current element to the sum.\n\n    if (max < sum) //Update max to store curreent maximum sum\n      max = sum; \n\n    if (sum < 0) //if sum is negative set it to zero\n      sum = 0; \n  } \n  return max;\n}\n`.trim();\n\nexport default function maximumSubarray() {\n  return (\n    <div className={classes.Content}>\n      <div className={classes.Question}>Maximum Subarray</div>\n      <img\n        alt=\"Maximum Subarray\"\n        className={classes.ProblemImage}\n        src={problemImage}\n      ></img>\n      <div className={classes.SolutionBlock}>\n        <div className={classes.Solution}>Solution 1:</div>\n        <div className={classes.Answer}>\n          Brute force approach. Find the sum of all the sub arrays and update\n          maxSum. For every index loop through the array and calculate the\n          maxSum. Check for max after calculating sum of each subarray.\n        </div>\n        <div>\n          <CodeBlock>\n            {solution1}\n          </CodeBlock>\n        </div>\n        <div className={classes.Answer}>\n          <b>\n            Time Complexity: O(n<sup>2</sup>){\" \"}\n          </b>\n          Since we use 2 for loops time complexity will be O(n<sup>2</sup>).\n        </div>\n      </div>\n      <div className={classes.SolutionBlock}>\n        <div className={classes.Solution}>Solution 2:</div>\n        <div className={classes.Answer}>\n          <b>Kadane's algorithm: </b>In this algorithm we use 2 variables to\n          store maximum_sum and sum_so_far. We iterate over the array once, at\n          each iteration we add the number to sum_so_far and update max if{\" \"}\n          <code>max &lt; sum_so_far</code>. Then we check if{\" \"}\n          <code>sum_so_far &lt; 0</code> then we set sum_so_far to 0.\n        </div>\n        <div>\n          <CodeBlock>\n            {solution2}\n          </CodeBlock>\n        </div>\n        <div className={classes.Answer}>\n          <b>Time Complexity: O(n) </b>we iterate over the array once so O(n).\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport classes from \"./index.module.css\";\nimport problemImage from \"../../assets/problems/single-number.png\";\nimport CodeBlock from \"../../HOC/codeBlock/codeBlock\";\n\nconst solution1 = `\npublic int maximumSubarray(int[] Arr) {\n  int n = Arr.length;\n\n  for(int i=1;i<n-1;i++){\n    for(int j=i;j<n;j++){ \n      if(!search(Arr, Arr[i],i,n))\n        return Arr[i];\n    }    \n  }\n  return 0;\n}\n\npublic Boolean search(int[] Arr, int number, int index,int n) {\n    for(int i=0;i<n;i++) {\n        if(i == index)\n            continue;\n        if(Arr[i] == num)\n            return true;\n    }\n    return false;\n}\n`.trim();\n\nconst solution2 = `\npublic int singleNumber(int[] nums) {\n    HashMap<Integer, Integer> hash_table = new HashMap<>();\n\n    for (int i : nums) {\n      hash_table.put(i, hash_table.getOrDefault(i, 0) + 1);\n    }\n    for (int i : nums) {\n      if (hash_table.get(i) == 1) {\n        return i;\n      }\n    }\n    return 0;\n}\n`.trim();\n\nconst solution3 = `\nclass Solution {\n    public int singleNumber(int[] nums) {\n      int sumOfSet = 0, sumOfNums = 0;\n      Set<Integer> set = new HashSet();\n  \n      for (int num : nums) {\n        if (!set.contains(num)) {\n          set.add(num);\n          sumOfSet += num;\n        }\n        sumOfNums += num;\n      }\n      return 2 * sumOfSet - sumOfNums;\n    }\n}\n`.trim();\n\nconst solution4 = `\npublic int singleNumber(int[] nums) {\n    int a = 0;\n    for (int i : nums) {\n      a ^= i;\n    }\n    return a;\n}\n`.trim();\n\nexport default function singleNumber() {\n    return (\n        <div className={classes.Content}>\n            <div className={classes.Question}>Single Number</div>\n            <img\n                alt=\"Single Number\"\n                className={classes.ProblemImage}\n                src={problemImage}\n            ></img>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 1:</div>\n                <div className={classes.Answer}>\n                    Brute force approach. Use 2 loops. For each index loop through the\n                    entire array to check if number exists only once.\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution1}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>\n                        Time Complexity: O(n<sup>2</sup>){\" \"}\n                    </b>\n                    Since we use 2 for loops time complexity will be O(n<sup>2</sup>).\n            </div>\n            </div>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 2:</div>\n                <div className={classes.Answer}>\n                    Using HashMap: Iterate over the array. For every index check if the number existes in the map.\n                    If it does not exist in the set then add it to the map and set value to 1.\n                    If it exists then increase the value by 1.\n                    Iterate through the map keys and reeturn the key that has value 1.\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution2}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>Time Complexity: O(n) </b>we iterate over the array once so O(n).\n                    <br />\n                    <b>Space Complexity: O(n) </b>The space required by hashmap\n                    is equal to the number of elements in the array.\n                </div>\n            </div>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 3:</div>\n                <div className={classes.Answer}>\n                    using math: concept - 2 ∗ (a+b+c) − (a+a+b+b+c) = c. <br />\n                    use HashSet to keep track of the number that is already added.\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution3}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>Time Complexity: O(n) </b>we iterate over the array once so O(n).\n                    <br />\n                    <b>Space Complexity: O(n) </b> set needs space for the elements in nums.\n                </div>\n            </div>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 4:</div>\n                <div className={classes.Answer}>\n                    using XOR: concept - a^a = 0, &nbsp; a^b^a = b<br />\n                    Loop through the array and do XOR operation on each index.\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution4}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>Time Complexity: O(n) </b>we iterate over the array once so O(n).\n                    <br />\n                    <b>Space Complexity: O(1) </b> We use constant extra space.\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport classes from \"./index.module.css\";\nimport problemImage from \"../../assets/problems/find-the-duplicate-number.png\";\nimport CodeBlock from \"../../HOC/codeBlock/codeBlock\";\n\nconst solution1 = `\npublic int findDuplicate(int[] Arr) {\n  int n = Arr.length;\n\n  for(int i=0;i<n;i++){\n    int count = 0;\n    for(int j=0;j<n;j++){ \n      if(Arr[j] == Arr[i])\n        count++; \n    }    \n    if(count == 2)\n        return Arr[i];\n  }\n  return -1;\n}\n`.trim();\n\nconst solution2 = `\npublic int findDuplicate(int[] Arr) {\n  int n = Arr.length;\n  HashSet<Integer> numbers = new HashSet<>();\n\n  for(int i=0;i<n;i++){\n    if(!numbers.contains(Arr[i])) {\n        numbers.add(Arr[i]);  //Add to HashSet\n    } else {\n        return Arr[i]; //duplicate number\n    }\n  } \n  return -1;\n}\n`.trim();\n\nconst solution3 = `\npublic static int findDuplicate(int[] Arr) \n{ \n    // Find the intersection  \n    // point of the slow and fast. \n    int slow = arr[0]; \n    int fast = arr[0]; \n    \n    do {\n        slow = Arr[slow];\n        fast = Arr[fast];\n    } while (slow != fast);\n    \n    // Find the \"entrance\" \n    // to the cycle. \n    int slow = arr[0]; \n    while (slow != fast)  \n    { \n        slow = arr[slow]; \n        fast = arr[fast]; \n    } \n  \n    return slow; \n} \n`.trim();\n\n\nexport default function findTheDuplicateNumber() {\n    return (\n        <div className={classes.Content}>\n            <div className={classes.Question}>Maximum Subarray</div>\n            <img\n                alt=\"Maximum Subarray\"\n                className={classes.ProblemImage}\n                src={problemImage}\n            ></img>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 1:</div>\n                <div className={classes.Answer}>\n                    Brute force approach. Use 2 loops, for every index\n                    check if the number present in the array twice.\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution1}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>\n                        Time Complexity: O(n<sup>2</sup>){\" \"}\n                    </b>\n                    Since we use 2 for loops time complexity will be O(n<sup>2</sup>).\n            </div>\n            </div>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 2:</div>\n                <div className={classes.Answer}>\n                    <b>Using HashSet:</b> &nbsp; Loop through the array once.\n                    If number is not present in the HashSet add it to the set.\n                    If the number is  already present in the list it's a duplicate number.\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution2}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>Time Complexity: O(n) </b>we iterate over the array once so O(n).\n                    Hence the final complexity will be O(nlogn).<br />\n                    <b>Space Complexity: O(n) </b>\n                </div>\n            </div>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 3:</div>\n                <div className={classes.Answer}>\n                    Firstly, the constraints of this problem imply that a cycle must exist.\n                    Because each number in an array arr[] is between 1 and n, it will necessarily point to an index that exists.\n                    Therefore, the list can be traversed infinitely, which implies that there is a cycle.\n                    Additionally, because 0 cannot appear as a value in an array arr[], arr[0] cannot be part of the cycle.\n                    Therefore, traversing the array in this manner from arr[0] is equivalent to traversing a cyclic linked list.\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution3}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>Time Complexity: O(n) </b>we iterate over the array once so O(n).\n                    Hence the final complexity will be O(nlogn).<br />\n                    <b>Space Complexity: O(1) </b> We do not use any extra space.\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport classes from \"./index.module.css\";\nimport CodeBlock from \"../../HOC/codeBlock/codeBlock\";\n\nconst solution1 = `\nvoid findMiddle() \n{ \n    ListNode node = head;  \n    int count = 0;\n    while (node != null) \n    { \n        count++;\n        node = node.next;\n    } \n    for(int i=0; i<count/2;i++) {\n        head = head.next;\n    }\n    return head;\n}\n`.trim();\n\n\nconst solution2 = `\nvoid findMiddle() \n{ \n    count = 0;\n\n    // ListNode is representation of the linked list.\n    ArrayList<ListNode> list = new ArrayList<>(); \n\n    while(head != null) {\n        list.add(head);\n        count++;\n        head = head.next;\n    }\n\n    // if linked list was empty return null\n    return count == 0 ? null : list.get(count/2);\n}\n`.trim();\n\nconst solution3 = `\nvoid findMiddle() \n{ \n    ListNode slow = head;\n    ListNode fast = head;\n    \n    while(fast!=null && fast.next!=null)\n    {\n        slow=slow.next;\n        fast= fast.next.next;\n    }\n    \n    return slow;\n}\n`.trim();\n\nexport default function middleOfLinkedList() {\n    return (\n        <div className={classes.Content}>\n            <div className={classes.Question}>Middle of the Linked List</div>\n            <div className={classes.QuestionDesc}>\n                Given a singly linked list, find middle of the linked list.\n                For example, if given linked list is 1->2->3->4->5 then output should be 3.\n                If there are even nodes, then there would be two middle nodes,\n                we need to print second middle element. For example,\n                if given linked list is 1->2->3->4->5->6 then output should be 4.\n            </div>\n\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 1:</div>\n                <div className={classes.Answer}>\n                    Traverse the whole linked list and count the no. of nodes.\n                    Now traverse the list again till count/2 and return the node at count/2.\n                    </div>\n                <div>\n                    <CodeBlock>\n                        {solution1}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>\n                        Time Complexity: O(n + n/2)\n                    </b>\n                </div>\n            </div>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 2:</div>\n                <div className={classes.Answer}>\n                    <b>Using ArrayList:</b> &nbsp; Traverse the whole linked list.\n                    Increment the count and add the node to array list.\n                    Return the node at count/2 position in ArrayList\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution2}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>Time Complexity: O(n)</b><br />\n                    <b>Space Complexity: O(n)</b>\n                </div>\n            </div>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 3:</div>\n                <div className={classes.Answer}>\n                    <b>Using 2 pointers:</b> Use a slow and fast pointer.\n                    Slow pointer will move ahead by 1 node and fast pointeer will move ahead by 2 nodes.\n                    When fast pointer reaches the end of the list slow pointer will be at the middle node.\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution3}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>Time Complexity: O(n) </b><br />\n                    <b>Space Complexity: O(1) </b> We do not use any extra space.\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport classes from \"./index.module.css\";\nimport problemImage from \"../../assets/problems/two-sum.png\";\nimport CodeBlock from \"../../HOC/codeBlock/codeBlock\";\n\nconst solution1 = `\npublic int maximumSubarray(int[] Arr, int target) {\n  int n = Arr.length;\n\n  for(int i=0;i<n;i++){\n    for(int j=i+1;j<n;j++){ \n      if(Arr[i] + Arr[j] == target)\n        return new int[] {j, i};\n    }    \n  }\n  return new int[] {-1,-1};\n}\n`.trim();\n\nconst solution2 = `\npublic int singleNumber(int[] nums, int target) {\n    int n = nums.length;\n    Map<Integer, Integer> map = new HashMap<>();\n    for (int i = 0; i < nums.length; i++) {\n        int complement = target - nums[i];\n        if(map.containsKey(complement))\n            return new int[] {map.get(complement), i};\n        map.put(nums[i], i);\n    }\n}\n`.trim();\n\nexport default function twoSum() {\n    return (\n        <div className={classes.Content}>\n            <div className={classes.Question}>Two Sum</div>\n            <img\n                alt=\"Single Number\"\n                className={classes.ProblemImage}\n                src={problemImage}\n            ></img>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 1:</div>\n                <div className={classes.Answer}>\n                    Brute force approach. Use 2 loops. For each index find\n                    if it's complement is present in the array.\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution1}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>\n                        Time Complexity: O(n<sup>2</sup>){\" \"}\n                    </b>\n                    Since we use 2 for loops time complexity will be O(n<sup>2</sup>).\n                </div>\n            </div>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 2:</div>\n                <div className={classes.Answer}>\n                    Using HashMap: Iterate over the array. For every index check if the\n                    compliment of the number existes in the map.\n                    If it does not then return the array of value and index.\n                    else add the number as key and index as value to the Map.\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution2}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>Time Complexity: O(n) </b>we iterate over the array once so O(n).\n                    <br />\n                    <b>Space Complexity: O(n) </b>The space required by hashmap\n                    is equal to the number of elements in the array.\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport classes from \"./index.module.css\";\nimport problemImage from \"../../assets/problems/fibonacci-number.png\";\nimport CodeBlock from \"../../HOC/codeBlock/codeBlock\";\nimport fibTreeImage from \"../../assets/solutions/fibonacciNumber/fib-tree.png\"\nimport fibTreeDpImage from \"../../assets/solutions/fibonacciNumber/fib-tree-dp.png\"\n\nconst solution1 = `\npublic int fib(int N) {\n    if (N <= 1) {\n        return N;\n    }\n    return fib(N-1) + fib(N-2);\n}\n`.trim();\n\nconst solution2 = `\npublic int fib(int N) {\n    int[] dp = new int[N+1];\n    return rec(N,dp);\n}\n\npublic int rec(int n, int[] dp) {\n    if(n == 0) return 0;\n    if(n == 1) return 1;\n    if(dp[n] != 0) return dp[n];\n    \n    dp[n] = rec(n - 1,dp) + rec(n - 2,dp);\n    return dp[n];\n}\n`.trim();\n\nconst solution3 = `\npublic int fib(int N) {\n    if (N <= 1) {\n        return N;\n    }\n    return memoize(N);\n}\n\npublic int memoize(int N) {\n  int[] cache = new int[N + 1];\n  cache[1] = 1;\n\n  for (int i = 2; i <= N; i++) {\n      cache[i] = cache[i-1] + cache[i-2];\n  }\n  return cache[N];\n}\n`.trim();\n\n\n\n\nexport default function fibonacciNumber() {\n    return (\n        <div className={classes.Content}>\n            <div className={classes.Question}>Fibonacci number</div>\n            <img\n                alt=\"Fibonacci number\"\n                className={classes.ProblemImage}\n                src={problemImage}\n            ></img>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 1:</div>\n                <div className={classes.Answer}>\n                    Use recursion to compute the Fibonacci number of a given integer.\n                    <ul>\n                        <li>\n                            Check if the provided input value, N, is less than or equal to 1. If true, return N.\n                        </li>\n                        <li>\n                            Otherwise, the function fib(int N) calls itself, with the result of the 2 previous numbers being added to each other, passed in as the argument.\n                            This is derived directly from the recurrence relation: fib(n) = fib(n - 1) + fib(n - 2);\n                        </li>\n                        <li>\n                            Do this until all numbers have been computed, then return the resulting answer.\n                        </li>\n                    </ul>\n                    <img\n                        alt=\"Fibonacci number\"\n                        className={classes.SolutionImage}\n                        src={fibTreeImage}\n                    ></img>\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution1}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>\n                        Time Complexity: O(2<sup>n</sup>){\" \"}\n                    </b>\n                    We start the computation from the top node and go down the tree until we reach the base case. From the recursive tree,\n                    we can notice that at each level the number of nodes is equal to twice the number of nodes in the previous level. At root,\n                    there is only 1 node but at the 1st level there are 2 nodes and then 4,8,16 and so on.\n                    For fib of 10 the time complexities will be 2¹⁰ since we need to go 10 levels deep and at each level the number of nodes\n                    doubles because of the branching logic.\n                    From this pattern, we can conclude that the time complexity is O(2<sup>n</sup>).\n                    <b>Space Complexity: O(n) </b>\n                </div>\n            </div>\n\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 2:</div>\n                <div className={classes.Answer}>\n                    Optimizing a brute force recursive problem starts by identifying the repeating subproblems.\n                    From the above recursive chart, we can notice that the 4th, 3rd, 2nd Fibonacci numbers\n                    are computed more than once. If we store the result of these computations\n                    we can avoid finding the value more than once. <br></br>\n                    <img\n                        alt=\"Fibonacci number\"\n                        className={classes.SolutionImage}\n                        src={fibTreeDpImage}\n                    ></img><br />\n                    In the above diagram, all nodes in blue are computed once,\n                    the nodes in yellow are reused and the nodes in red are not computed. <br />\n                    By using an array to store the already computed values reduces the number of recursive calls made.\n                    This reduces the time complexity from exponential to linear.\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution2}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>Time Complexity: O(n) </b>The number of recursive calls made is reduced to 2 x n which reduces the time complexity to O(2n),\n                    by eliminating the constant the time complexity is O(n)<br />\n                    <b>Space Complexity: O(n) </b>\n                </div>\n            </div>\n            <div className={classes.SolutionBlock}>\n                <div className={classes.Solution}>Solution 3:</div>\n                <div className={classes.Answer}>\n                    <ul>\n                        <li>\n                            If N is less than or equal to 1, return N\n                        </ li>\n                        <li>\n                            Otherwise, iterate through N, storing each computed answer in an array along the way.\n                        </li>\n                        <li>\n                            Use this array as a reference to the 2 previous numbers to calculate the current Fibonacci number.\n                        </li>\n                        <li>\n                            Once we've reached the last number, return it's Fibonacci number.\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    <CodeBlock>\n                        {solution3}\n                    </CodeBlock>\n                </div>\n                <div className={classes.Answer}>\n                    <b>Time Complexity: O(n) </b><br></br>\n                    <b>Space Complexity: O(n) </b> We use array to store the values.\n                </div>\n            </div>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport classes from \"./home.module.css\";\nimport Sidebar from \"../../components/sidebar/sidebar\";\nimport SideBarMobile from \"../../components/sideBarMobile/sideBarMobile\";\nimport {\n  NoOfGoodPairs,\n  RunningSumOf1DArray,\n  MaximumSubarray,\n  SingleNumber,\n  FindTheDuplicateNumber,\n  MiddleOfLinkedList,\n  TwoSum,\n  FibonacciNumber\n} from \"../../UI/solutions/index\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className={classes.Home}>\n        <Sidebar />\n        <SideBarMobile\n          hideSideBar={this.props.hideSideBar}\n          showMobileSideBar={this.props.showMobileSideBar}\n        />\n\n        <Switch>\n          <Route path=\"/\" exact></Route>\n          <Route path=\"/home\" exact></Route>\n          <Route path=\"/problems/Running-sum-of-1d-array\" exact>\n            <RunningSumOf1DArray />\n          </Route>\n          <Route path=\"/problems/Number-of-Good-Pairs\" exact>\n            <NoOfGoodPairs />\n          </Route>\n          <Route path=\"/problems/Two-sum\" exact>\n            <TwoSum />\n          </Route>\n          <Route path=\"/problems/Maximum-subarray\" exact>\n            <MaximumSubarray />\n          </Route>\n          <Route path=\"/problems/Single-number\" exact>\n            <SingleNumber />\n          </Route>\n          <Route path=\"/problems/Find-the-duplicate-number\" exact>\n            <FindTheDuplicateNumber />\n          </Route>\n          <Route path=\"/problems/Find-middle-of-linked-list\" exact>\n            <MiddleOfLinkedList />\n          </Route>\n          <Route path=\"/problems/Fibonacci-number\" exact>\n            <FibonacciNumber />\n          </Route>\n        </Switch>\n        <Redirect to=\"/problems/Running-sum-of-1d-array\" />\n      </div>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/header\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"./containers/home/Home\";\n\nfunction App() {\n  const [showSideBar, setShowSideBar] = useState(false);\n\n  const toggleSideBarHandler = () => {\n    console.log(\"clicked\");\n    setShowSideBar(!showSideBar);\n  };\n\n  return (\n    <Router basename=\"/code-book\">\n      <div className=\"App\">\n        <Header\n          toggleMenu={toggleSideBarHandler}\n          sideBarShown={showSideBar}\n          showSideBar={showSideBar}\n        />\n        <Home\n          hideSideBar={toggleSideBarHandler}\n          showMobileSideBar={showSideBar}\n        />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/single-number.4907a280.png\";","module.exports = __webpack_public_path__ + \"static/media/find-the-duplicate-number.09c87fcc.png\";","module.exports = __webpack_public_path__ + \"static/media/two-sum.c6b3f74e.png\";","module.exports = __webpack_public_path__ + \"static/media/fibonacci-number.ae510e43.png\";","module.exports = __webpack_public_path__ + \"static/media/fib-tree.fcfe91ce.png\";","module.exports = __webpack_public_path__ + \"static/media/fib-tree-dp.5c1aa46d.png\";","var map = {\n\t\"./Binary_Property/ASCII.js\": 90,\n\t\"./Binary_Property/ASCII_Hex_Digit.js\": 91,\n\t\"./Binary_Property/Alphabetic.js\": 92,\n\t\"./Binary_Property/Any.js\": 93,\n\t\"./Binary_Property/Assigned.js\": 94,\n\t\"./Binary_Property/Bidi_Control.js\": 95,\n\t\"./Binary_Property/Bidi_Mirrored.js\": 96,\n\t\"./Binary_Property/Case_Ignorable.js\": 97,\n\t\"./Binary_Property/Cased.js\": 98,\n\t\"./Binary_Property/Changes_When_Casefolded.js\": 99,\n\t\"./Binary_Property/Changes_When_Casemapped.js\": 100,\n\t\"./Binary_Property/Changes_When_Lowercased.js\": 101,\n\t\"./Binary_Property/Changes_When_NFKC_Casefolded.js\": 102,\n\t\"./Binary_Property/Changes_When_Titlecased.js\": 103,\n\t\"./Binary_Property/Changes_When_Uppercased.js\": 104,\n\t\"./Binary_Property/Dash.js\": 105,\n\t\"./Binary_Property/Default_Ignorable_Code_Point.js\": 106,\n\t\"./Binary_Property/Deprecated.js\": 107,\n\t\"./Binary_Property/Diacritic.js\": 108,\n\t\"./Binary_Property/Emoji.js\": 109,\n\t\"./Binary_Property/Emoji_Component.js\": 110,\n\t\"./Binary_Property/Emoji_Modifier.js\": 111,\n\t\"./Binary_Property/Emoji_Modifier_Base.js\": 112,\n\t\"./Binary_Property/Emoji_Presentation.js\": 113,\n\t\"./Binary_Property/Extended_Pictographic.js\": 114,\n\t\"./Binary_Property/Extender.js\": 115,\n\t\"./Binary_Property/Grapheme_Base.js\": 116,\n\t\"./Binary_Property/Grapheme_Extend.js\": 117,\n\t\"./Binary_Property/Hex_Digit.js\": 118,\n\t\"./Binary_Property/IDS_Binary_Operator.js\": 119,\n\t\"./Binary_Property/IDS_Trinary_Operator.js\": 120,\n\t\"./Binary_Property/ID_Continue.js\": 121,\n\t\"./Binary_Property/ID_Start.js\": 122,\n\t\"./Binary_Property/Ideographic.js\": 123,\n\t\"./Binary_Property/Join_Control.js\": 124,\n\t\"./Binary_Property/Logical_Order_Exception.js\": 125,\n\t\"./Binary_Property/Lowercase.js\": 126,\n\t\"./Binary_Property/Math.js\": 127,\n\t\"./Binary_Property/Noncharacter_Code_Point.js\": 128,\n\t\"./Binary_Property/Pattern_Syntax.js\": 129,\n\t\"./Binary_Property/Pattern_White_Space.js\": 130,\n\t\"./Binary_Property/Quotation_Mark.js\": 131,\n\t\"./Binary_Property/Radical.js\": 132,\n\t\"./Binary_Property/Regional_Indicator.js\": 133,\n\t\"./Binary_Property/Sentence_Terminal.js\": 134,\n\t\"./Binary_Property/Soft_Dotted.js\": 135,\n\t\"./Binary_Property/Terminal_Punctuation.js\": 136,\n\t\"./Binary_Property/Unified_Ideograph.js\": 137,\n\t\"./Binary_Property/Uppercase.js\": 138,\n\t\"./Binary_Property/Variation_Selector.js\": 139,\n\t\"./Binary_Property/White_Space.js\": 140,\n\t\"./Binary_Property/XID_Continue.js\": 141,\n\t\"./Binary_Property/XID_Start.js\": 142,\n\t\"./General_Category/Cased_Letter.js\": 143,\n\t\"./General_Category/Close_Punctuation.js\": 144,\n\t\"./General_Category/Connector_Punctuation.js\": 145,\n\t\"./General_Category/Control.js\": 146,\n\t\"./General_Category/Currency_Symbol.js\": 147,\n\t\"./General_Category/Dash_Punctuation.js\": 148,\n\t\"./General_Category/Decimal_Number.js\": 149,\n\t\"./General_Category/Enclosing_Mark.js\": 150,\n\t\"./General_Category/Final_Punctuation.js\": 151,\n\t\"./General_Category/Format.js\": 152,\n\t\"./General_Category/Initial_Punctuation.js\": 153,\n\t\"./General_Category/Letter.js\": 154,\n\t\"./General_Category/Letter_Number.js\": 155,\n\t\"./General_Category/Line_Separator.js\": 156,\n\t\"./General_Category/Lowercase_Letter.js\": 157,\n\t\"./General_Category/Mark.js\": 158,\n\t\"./General_Category/Math_Symbol.js\": 159,\n\t\"./General_Category/Modifier_Letter.js\": 160,\n\t\"./General_Category/Modifier_Symbol.js\": 161,\n\t\"./General_Category/Nonspacing_Mark.js\": 162,\n\t\"./General_Category/Number.js\": 163,\n\t\"./General_Category/Open_Punctuation.js\": 164,\n\t\"./General_Category/Other.js\": 165,\n\t\"./General_Category/Other_Letter.js\": 166,\n\t\"./General_Category/Other_Number.js\": 167,\n\t\"./General_Category/Other_Punctuation.js\": 168,\n\t\"./General_Category/Other_Symbol.js\": 169,\n\t\"./General_Category/Paragraph_Separator.js\": 170,\n\t\"./General_Category/Private_Use.js\": 171,\n\t\"./General_Category/Punctuation.js\": 172,\n\t\"./General_Category/Separator.js\": 173,\n\t\"./General_Category/Space_Separator.js\": 174,\n\t\"./General_Category/Spacing_Mark.js\": 175,\n\t\"./General_Category/Surrogate.js\": 176,\n\t\"./General_Category/Symbol.js\": 177,\n\t\"./General_Category/Titlecase_Letter.js\": 178,\n\t\"./General_Category/Unassigned.js\": 179,\n\t\"./General_Category/Uppercase_Letter.js\": 180,\n\t\"./Script/Adlam.js\": 181,\n\t\"./Script/Ahom.js\": 182,\n\t\"./Script/Anatolian_Hieroglyphs.js\": 183,\n\t\"./Script/Arabic.js\": 184,\n\t\"./Script/Armenian.js\": 185,\n\t\"./Script/Avestan.js\": 186,\n\t\"./Script/Balinese.js\": 187,\n\t\"./Script/Bamum.js\": 188,\n\t\"./Script/Bassa_Vah.js\": 189,\n\t\"./Script/Batak.js\": 190,\n\t\"./Script/Bengali.js\": 191,\n\t\"./Script/Bhaiksuki.js\": 192,\n\t\"./Script/Bopomofo.js\": 193,\n\t\"./Script/Brahmi.js\": 194,\n\t\"./Script/Braille.js\": 195,\n\t\"./Script/Buginese.js\": 196,\n\t\"./Script/Buhid.js\": 197,\n\t\"./Script/Canadian_Aboriginal.js\": 198,\n\t\"./Script/Carian.js\": 199,\n\t\"./Script/Caucasian_Albanian.js\": 200,\n\t\"./Script/Chakma.js\": 201,\n\t\"./Script/Cham.js\": 202,\n\t\"./Script/Cherokee.js\": 203,\n\t\"./Script/Chorasmian.js\": 204,\n\t\"./Script/Common.js\": 205,\n\t\"./Script/Coptic.js\": 206,\n\t\"./Script/Cuneiform.js\": 207,\n\t\"./Script/Cypriot.js\": 208,\n\t\"./Script/Cyrillic.js\": 209,\n\t\"./Script/Deseret.js\": 210,\n\t\"./Script/Devanagari.js\": 211,\n\t\"./Script/Dives_Akuru.js\": 212,\n\t\"./Script/Dogra.js\": 213,\n\t\"./Script/Duployan.js\": 214,\n\t\"./Script/Egyptian_Hieroglyphs.js\": 215,\n\t\"./Script/Elbasan.js\": 216,\n\t\"./Script/Elymaic.js\": 217,\n\t\"./Script/Ethiopic.js\": 218,\n\t\"./Script/Georgian.js\": 219,\n\t\"./Script/Glagolitic.js\": 220,\n\t\"./Script/Gothic.js\": 221,\n\t\"./Script/Grantha.js\": 222,\n\t\"./Script/Greek.js\": 223,\n\t\"./Script/Gujarati.js\": 224,\n\t\"./Script/Gunjala_Gondi.js\": 225,\n\t\"./Script/Gurmukhi.js\": 226,\n\t\"./Script/Han.js\": 227,\n\t\"./Script/Hangul.js\": 228,\n\t\"./Script/Hanifi_Rohingya.js\": 229,\n\t\"./Script/Hanunoo.js\": 230,\n\t\"./Script/Hatran.js\": 231,\n\t\"./Script/Hebrew.js\": 232,\n\t\"./Script/Hiragana.js\": 233,\n\t\"./Script/Imperial_Aramaic.js\": 234,\n\t\"./Script/Inherited.js\": 235,\n\t\"./Script/Inscriptional_Pahlavi.js\": 236,\n\t\"./Script/Inscriptional_Parthian.js\": 237,\n\t\"./Script/Javanese.js\": 238,\n\t\"./Script/Kaithi.js\": 239,\n\t\"./Script/Kannada.js\": 240,\n\t\"./Script/Katakana.js\": 241,\n\t\"./Script/Kayah_Li.js\": 242,\n\t\"./Script/Kharoshthi.js\": 243,\n\t\"./Script/Khitan_Small_Script.js\": 244,\n\t\"./Script/Khmer.js\": 245,\n\t\"./Script/Khojki.js\": 246,\n\t\"./Script/Khudawadi.js\": 247,\n\t\"./Script/Lao.js\": 248,\n\t\"./Script/Latin.js\": 249,\n\t\"./Script/Lepcha.js\": 250,\n\t\"./Script/Limbu.js\": 251,\n\t\"./Script/Linear_A.js\": 252,\n\t\"./Script/Linear_B.js\": 253,\n\t\"./Script/Lisu.js\": 254,\n\t\"./Script/Lycian.js\": 255,\n\t\"./Script/Lydian.js\": 256,\n\t\"./Script/Mahajani.js\": 257,\n\t\"./Script/Makasar.js\": 258,\n\t\"./Script/Malayalam.js\": 259,\n\t\"./Script/Mandaic.js\": 260,\n\t\"./Script/Manichaean.js\": 261,\n\t\"./Script/Marchen.js\": 262,\n\t\"./Script/Masaram_Gondi.js\": 263,\n\t\"./Script/Medefaidrin.js\": 264,\n\t\"./Script/Meetei_Mayek.js\": 265,\n\t\"./Script/Mende_Kikakui.js\": 266,\n\t\"./Script/Meroitic_Cursive.js\": 267,\n\t\"./Script/Meroitic_Hieroglyphs.js\": 268,\n\t\"./Script/Miao.js\": 269,\n\t\"./Script/Modi.js\": 270,\n\t\"./Script/Mongolian.js\": 271,\n\t\"./Script/Mro.js\": 272,\n\t\"./Script/Multani.js\": 273,\n\t\"./Script/Myanmar.js\": 274,\n\t\"./Script/Nabataean.js\": 275,\n\t\"./Script/Nandinagari.js\": 276,\n\t\"./Script/New_Tai_Lue.js\": 277,\n\t\"./Script/Newa.js\": 278,\n\t\"./Script/Nko.js\": 279,\n\t\"./Script/Nushu.js\": 280,\n\t\"./Script/Nyiakeng_Puachue_Hmong.js\": 281,\n\t\"./Script/Ogham.js\": 282,\n\t\"./Script/Ol_Chiki.js\": 283,\n\t\"./Script/Old_Hungarian.js\": 284,\n\t\"./Script/Old_Italic.js\": 285,\n\t\"./Script/Old_North_Arabian.js\": 286,\n\t\"./Script/Old_Permic.js\": 287,\n\t\"./Script/Old_Persian.js\": 288,\n\t\"./Script/Old_Sogdian.js\": 289,\n\t\"./Script/Old_South_Arabian.js\": 290,\n\t\"./Script/Old_Turkic.js\": 291,\n\t\"./Script/Oriya.js\": 292,\n\t\"./Script/Osage.js\": 293,\n\t\"./Script/Osmanya.js\": 294,\n\t\"./Script/Pahawh_Hmong.js\": 295,\n\t\"./Script/Palmyrene.js\": 296,\n\t\"./Script/Pau_Cin_Hau.js\": 297,\n\t\"./Script/Phags_Pa.js\": 298,\n\t\"./Script/Phoenician.js\": 299,\n\t\"./Script/Psalter_Pahlavi.js\": 300,\n\t\"./Script/Rejang.js\": 301,\n\t\"./Script/Runic.js\": 302,\n\t\"./Script/Samaritan.js\": 303,\n\t\"./Script/Saurashtra.js\": 304,\n\t\"./Script/Sharada.js\": 305,\n\t\"./Script/Shavian.js\": 306,\n\t\"./Script/Siddham.js\": 307,\n\t\"./Script/SignWriting.js\": 308,\n\t\"./Script/Sinhala.js\": 309,\n\t\"./Script/Sogdian.js\": 310,\n\t\"./Script/Sora_Sompeng.js\": 311,\n\t\"./Script/Soyombo.js\": 312,\n\t\"./Script/Sundanese.js\": 313,\n\t\"./Script/Syloti_Nagri.js\": 314,\n\t\"./Script/Syriac.js\": 315,\n\t\"./Script/Tagalog.js\": 316,\n\t\"./Script/Tagbanwa.js\": 317,\n\t\"./Script/Tai_Le.js\": 318,\n\t\"./Script/Tai_Tham.js\": 319,\n\t\"./Script/Tai_Viet.js\": 320,\n\t\"./Script/Takri.js\": 321,\n\t\"./Script/Tamil.js\": 322,\n\t\"./Script/Tangut.js\": 323,\n\t\"./Script/Telugu.js\": 324,\n\t\"./Script/Thaana.js\": 325,\n\t\"./Script/Thai.js\": 326,\n\t\"./Script/Tibetan.js\": 327,\n\t\"./Script/Tifinagh.js\": 328,\n\t\"./Script/Tirhuta.js\": 329,\n\t\"./Script/Ugaritic.js\": 330,\n\t\"./Script/Vai.js\": 331,\n\t\"./Script/Wancho.js\": 332,\n\t\"./Script/Warang_Citi.js\": 333,\n\t\"./Script/Yezidi.js\": 334,\n\t\"./Script/Yi.js\": 335,\n\t\"./Script/Zanabazar_Square.js\": 336,\n\t\"./Script_Extensions/Adlam.js\": 337,\n\t\"./Script_Extensions/Ahom.js\": 338,\n\t\"./Script_Extensions/Anatolian_Hieroglyphs.js\": 339,\n\t\"./Script_Extensions/Arabic.js\": 340,\n\t\"./Script_Extensions/Armenian.js\": 341,\n\t\"./Script_Extensions/Avestan.js\": 342,\n\t\"./Script_Extensions/Balinese.js\": 343,\n\t\"./Script_Extensions/Bamum.js\": 344,\n\t\"./Script_Extensions/Bassa_Vah.js\": 345,\n\t\"./Script_Extensions/Batak.js\": 346,\n\t\"./Script_Extensions/Bengali.js\": 347,\n\t\"./Script_Extensions/Bhaiksuki.js\": 348,\n\t\"./Script_Extensions/Bopomofo.js\": 349,\n\t\"./Script_Extensions/Brahmi.js\": 350,\n\t\"./Script_Extensions/Braille.js\": 351,\n\t\"./Script_Extensions/Buginese.js\": 352,\n\t\"./Script_Extensions/Buhid.js\": 353,\n\t\"./Script_Extensions/Canadian_Aboriginal.js\": 354,\n\t\"./Script_Extensions/Carian.js\": 355,\n\t\"./Script_Extensions/Caucasian_Albanian.js\": 356,\n\t\"./Script_Extensions/Chakma.js\": 357,\n\t\"./Script_Extensions/Cham.js\": 358,\n\t\"./Script_Extensions/Cherokee.js\": 359,\n\t\"./Script_Extensions/Chorasmian.js\": 360,\n\t\"./Script_Extensions/Common.js\": 361,\n\t\"./Script_Extensions/Coptic.js\": 362,\n\t\"./Script_Extensions/Cuneiform.js\": 363,\n\t\"./Script_Extensions/Cypriot.js\": 364,\n\t\"./Script_Extensions/Cyrillic.js\": 365,\n\t\"./Script_Extensions/Deseret.js\": 366,\n\t\"./Script_Extensions/Devanagari.js\": 367,\n\t\"./Script_Extensions/Dives_Akuru.js\": 368,\n\t\"./Script_Extensions/Dogra.js\": 369,\n\t\"./Script_Extensions/Duployan.js\": 370,\n\t\"./Script_Extensions/Egyptian_Hieroglyphs.js\": 371,\n\t\"./Script_Extensions/Elbasan.js\": 372,\n\t\"./Script_Extensions/Elymaic.js\": 373,\n\t\"./Script_Extensions/Ethiopic.js\": 374,\n\t\"./Script_Extensions/Georgian.js\": 375,\n\t\"./Script_Extensions/Glagolitic.js\": 376,\n\t\"./Script_Extensions/Gothic.js\": 377,\n\t\"./Script_Extensions/Grantha.js\": 378,\n\t\"./Script_Extensions/Greek.js\": 379,\n\t\"./Script_Extensions/Gujarati.js\": 380,\n\t\"./Script_Extensions/Gunjala_Gondi.js\": 381,\n\t\"./Script_Extensions/Gurmukhi.js\": 382,\n\t\"./Script_Extensions/Han.js\": 383,\n\t\"./Script_Extensions/Hangul.js\": 384,\n\t\"./Script_Extensions/Hanifi_Rohingya.js\": 385,\n\t\"./Script_Extensions/Hanunoo.js\": 386,\n\t\"./Script_Extensions/Hatran.js\": 387,\n\t\"./Script_Extensions/Hebrew.js\": 388,\n\t\"./Script_Extensions/Hiragana.js\": 389,\n\t\"./Script_Extensions/Imperial_Aramaic.js\": 390,\n\t\"./Script_Extensions/Inherited.js\": 391,\n\t\"./Script_Extensions/Inscriptional_Pahlavi.js\": 392,\n\t\"./Script_Extensions/Inscriptional_Parthian.js\": 393,\n\t\"./Script_Extensions/Javanese.js\": 394,\n\t\"./Script_Extensions/Kaithi.js\": 395,\n\t\"./Script_Extensions/Kannada.js\": 396,\n\t\"./Script_Extensions/Katakana.js\": 397,\n\t\"./Script_Extensions/Kayah_Li.js\": 398,\n\t\"./Script_Extensions/Kharoshthi.js\": 399,\n\t\"./Script_Extensions/Khitan_Small_Script.js\": 400,\n\t\"./Script_Extensions/Khmer.js\": 401,\n\t\"./Script_Extensions/Khojki.js\": 402,\n\t\"./Script_Extensions/Khudawadi.js\": 403,\n\t\"./Script_Extensions/Lao.js\": 404,\n\t\"./Script_Extensions/Latin.js\": 405,\n\t\"./Script_Extensions/Lepcha.js\": 406,\n\t\"./Script_Extensions/Limbu.js\": 407,\n\t\"./Script_Extensions/Linear_A.js\": 408,\n\t\"./Script_Extensions/Linear_B.js\": 409,\n\t\"./Script_Extensions/Lisu.js\": 410,\n\t\"./Script_Extensions/Lycian.js\": 411,\n\t\"./Script_Extensions/Lydian.js\": 412,\n\t\"./Script_Extensions/Mahajani.js\": 413,\n\t\"./Script_Extensions/Makasar.js\": 414,\n\t\"./Script_Extensions/Malayalam.js\": 415,\n\t\"./Script_Extensions/Mandaic.js\": 416,\n\t\"./Script_Extensions/Manichaean.js\": 417,\n\t\"./Script_Extensions/Marchen.js\": 418,\n\t\"./Script_Extensions/Masaram_Gondi.js\": 419,\n\t\"./Script_Extensions/Medefaidrin.js\": 420,\n\t\"./Script_Extensions/Meetei_Mayek.js\": 421,\n\t\"./Script_Extensions/Mende_Kikakui.js\": 422,\n\t\"./Script_Extensions/Meroitic_Cursive.js\": 423,\n\t\"./Script_Extensions/Meroitic_Hieroglyphs.js\": 424,\n\t\"./Script_Extensions/Miao.js\": 425,\n\t\"./Script_Extensions/Modi.js\": 426,\n\t\"./Script_Extensions/Mongolian.js\": 427,\n\t\"./Script_Extensions/Mro.js\": 428,\n\t\"./Script_Extensions/Multani.js\": 429,\n\t\"./Script_Extensions/Myanmar.js\": 430,\n\t\"./Script_Extensions/Nabataean.js\": 431,\n\t\"./Script_Extensions/Nandinagari.js\": 432,\n\t\"./Script_Extensions/New_Tai_Lue.js\": 433,\n\t\"./Script_Extensions/Newa.js\": 434,\n\t\"./Script_Extensions/Nko.js\": 435,\n\t\"./Script_Extensions/Nushu.js\": 436,\n\t\"./Script_Extensions/Nyiakeng_Puachue_Hmong.js\": 437,\n\t\"./Script_Extensions/Ogham.js\": 438,\n\t\"./Script_Extensions/Ol_Chiki.js\": 439,\n\t\"./Script_Extensions/Old_Hungarian.js\": 440,\n\t\"./Script_Extensions/Old_Italic.js\": 441,\n\t\"./Script_Extensions/Old_North_Arabian.js\": 442,\n\t\"./Script_Extensions/Old_Permic.js\": 443,\n\t\"./Script_Extensions/Old_Persian.js\": 444,\n\t\"./Script_Extensions/Old_Sogdian.js\": 445,\n\t\"./Script_Extensions/Old_South_Arabian.js\": 446,\n\t\"./Script_Extensions/Old_Turkic.js\": 447,\n\t\"./Script_Extensions/Oriya.js\": 448,\n\t\"./Script_Extensions/Osage.js\": 449,\n\t\"./Script_Extensions/Osmanya.js\": 450,\n\t\"./Script_Extensions/Pahawh_Hmong.js\": 451,\n\t\"./Script_Extensions/Palmyrene.js\": 452,\n\t\"./Script_Extensions/Pau_Cin_Hau.js\": 453,\n\t\"./Script_Extensions/Phags_Pa.js\": 454,\n\t\"./Script_Extensions/Phoenician.js\": 455,\n\t\"./Script_Extensions/Psalter_Pahlavi.js\": 456,\n\t\"./Script_Extensions/Rejang.js\": 457,\n\t\"./Script_Extensions/Runic.js\": 458,\n\t\"./Script_Extensions/Samaritan.js\": 459,\n\t\"./Script_Extensions/Saurashtra.js\": 460,\n\t\"./Script_Extensions/Sharada.js\": 461,\n\t\"./Script_Extensions/Shavian.js\": 462,\n\t\"./Script_Extensions/Siddham.js\": 463,\n\t\"./Script_Extensions/SignWriting.js\": 464,\n\t\"./Script_Extensions/Sinhala.js\": 465,\n\t\"./Script_Extensions/Sogdian.js\": 466,\n\t\"./Script_Extensions/Sora_Sompeng.js\": 467,\n\t\"./Script_Extensions/Soyombo.js\": 468,\n\t\"./Script_Extensions/Sundanese.js\": 469,\n\t\"./Script_Extensions/Syloti_Nagri.js\": 470,\n\t\"./Script_Extensions/Syriac.js\": 471,\n\t\"./Script_Extensions/Tagalog.js\": 472,\n\t\"./Script_Extensions/Tagbanwa.js\": 473,\n\t\"./Script_Extensions/Tai_Le.js\": 474,\n\t\"./Script_Extensions/Tai_Tham.js\": 475,\n\t\"./Script_Extensions/Tai_Viet.js\": 476,\n\t\"./Script_Extensions/Takri.js\": 477,\n\t\"./Script_Extensions/Tamil.js\": 478,\n\t\"./Script_Extensions/Tangut.js\": 479,\n\t\"./Script_Extensions/Telugu.js\": 480,\n\t\"./Script_Extensions/Thaana.js\": 481,\n\t\"./Script_Extensions/Thai.js\": 482,\n\t\"./Script_Extensions/Tibetan.js\": 483,\n\t\"./Script_Extensions/Tifinagh.js\": 484,\n\t\"./Script_Extensions/Tirhuta.js\": 485,\n\t\"./Script_Extensions/Ugaritic.js\": 486,\n\t\"./Script_Extensions/Vai.js\": 487,\n\t\"./Script_Extensions/Wancho.js\": 488,\n\t\"./Script_Extensions/Warang_Citi.js\": 489,\n\t\"./Script_Extensions/Yezidi.js\": 490,\n\t\"./Script_Extensions/Yi.js\": 491,\n\t\"./Script_Extensions/Zanabazar_Square.js\": 492,\n\t\"./index.js\": 493,\n\t\"./unicode-version.js\": 494\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 89;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"sideBarMobile_Sidebar__1iVyM\",\"NavLink\":\"sideBarMobile_NavLink__1OAdA\",\"Backdrop\":\"sideBarMobile_Backdrop__3ocfn\"};"],"sourceRoot":""}